# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
blueprint_name: af3-slurm-ipynb

validators:
- validator: test_deployment_variable_not_used
  skip: true # skipping this validator, since we use a common deployment yaml.

# this blueprint should be used with the extra variables defined in
# af3-slurm-deployment.yaml
vars:
  deployment_name: af3-slurm-ipynb # adjust if necessary
  notebook_machine_type: n1-standard-4
  notebook_custom_image_family: af3-slurm-ipynb-notebook
  base_image:
    project: ubuntu-os-cloud
    # see latest in https://github.com/GoogleCloudPlatform/slurm-gcp/blob/master/docs/images.md#published-image-family
    family: ubuntu-2204-lts
    # You can find size of source image by using following command
    # gcloud compute images describe-from-family <source_image_family> --project schedmd-slurm-public
  image_build_machine_type: n2-standard-16
  disk_size_gb: 128
  instance_image:
    project: $(vars.project_id)
    family: $(vars.deployment_name)-slurm-apptainer

  ipynb_launcher_runner:
  - type: data
    destination: /tmp/slurm-rest-api-notebook.ipynb.j2
    source: $(ghpc_stage("pkg/ansible/jinja_templates/slurm-rest-api-notebook.ipynb.j2"))
  - type: data
    destination: /tmp/slurm_client.py.j2
    source: $(ghpc_stage("pkg/ansible/jinja_templates/slurm_client.py.j2"))
  - type: data
    destination: /tmp/visualization.py
    source: $(ghpc_stage("pkg/assets/visualization.py"))
  - type: data
    destination: /tmp/notebook-requirements.txt
    source: $(ghpc_stage("pkg/assets/requirements.txt"))
  - type: data
    destination: /tmp/rest_api_launch_af3_job.sh.j2
    source: $(ghpc_stage("pkg/ansible/jinja_templates/launch_af3_job.sh.j2"))

  ipynb_setup_runner:
  - type: ansible-local
    destination: ipynb-setup.yml
    source: $(ghpc_stage("pkg/ansible/playbooks/ipynb-setup.yml"))
    args: "-e project_id=$(vars.project_id) -e service_user=$(vars.slurm_rest_user) -e af3ipynb_bucket_local_mount=$(vars.af3ipynb_bucket_local_mount) -e slurm_rest_server_activate=$(vars.slurm_rest_server_activate) -e slurm_rest_api_port=$(vars.slurm_rest_api_port) -e slurm_rest_token_secret_name=$(vars.slurm_rest_token_secret_name) -e af3ipynb_bucket=$(vars.af3ipynb_bucket) -e default_datapipeline_partition_name=$(vars.default_datapipeline_partition.name) -e default_datapipeline_timeout=$(vars.default_datapipeline_timeout) -e default_inference_partition_name=$(vars.default_inference_partition.name) -e default_inference_timeout=$(vars.default_inference_timeout) -e datapipeline_c3dhm_partition_name=$(vars.datapipeline_c3dhm_partition.name) -e datapipeline_c3dhm_partition_machine_type=$(vars.datapipeline_c3dhm_partition.machine_type) -e datapipeline_c3dhm_partition_memory=$(vars.datapipeline_c3dhm_partition.memory) -e datapipeline_c3dhm_partition_cpu_count=$(vars.datapipeline_c3dhm_partition.cpu_count) -e inference_g2_partition_name=$(vars.inference_g2_partition.name) -e inference_g2_partition_machine_type=$(vars.inference_g2_partition.machine_type) -e inference_g2_partition_memory=$(vars.inference_g2_partition.memory) -e inference_g2_partition_cpu_count=$(vars.inference_g2_partition.cpu_count) -e inference_a2_partition_name=$(vars.inference_a2_partition.name) -e inference_a2_partition_machine_type=$(vars.inference_a2_partition.machine_type) -e inference_a2_partition_memory=$(vars.inference_a2_partition.memory) -e inference_a2_partition_cpu_count=$(vars.inference_a2_partition.cpu_count) -e inference_a2u_partition_name=$(vars.inference_a2u_partition.name) -e inference_a2u_partition_machine_type=$(vars.inference_a2u_partition.machine_type) -e inference_a2u_partition_memory=$(vars.inference_a2u_partition.memory) -e inference_a2u_partition_cpu_count=$(vars.inference_a2u_partition.cpu_count) -e max_template_date=$(vars.max_template_date) -e conformer_max_iterations=$(vars.conformer_max_iterations) -e num_recycles=$(vars.num_recycles) -e num_diffusion_samples=$(vars.num_diffusion_samples) -e num_seeds=$(vars.num_seeds) -e save_embeddings=$(vars.save_embeddings) -e sif_dir=$(vars.sif_dir) -e model_dir=$(vars.model_dir) -e db_dir=$(vars.db_dir) -e pdb_database_path=$(vars.pdb_database_path) -e jax_compilation_cache_path=$(vars.jax_compilation_cache_path) -e inference_enable_unified_memory=$(vars.inference_enable_unified_memory)"


deployment_groups:
- group: environment
  modules:
  - id: af3ipynb_network
    source: modules/network/vpc

- group: build-setup-base
  modules:
  - id: af3ipynb-setup-startup-script
    source: modules/scripts/startup-script
    settings:
      runners: $(flatten([vars.ipynb_launcher_runner, vars.ipynb_setup_runner]))

- group: packer
  modules:
  - id: notebook_setup_image
    source: modules/packer/custom-image
    kind: packer
    use:
    - af3ipynb_network
    - af3ipynb-setup-startup-script
    settings:
      disk_size: $(vars.disk_size_gb)
      machine_type: $(vars.image_build_machine_type)
      source_image_family: $(vars.base_image.family)
      source_image_project_id: [$(vars.base_image.project)]
      image_family: $(vars.instance_image.family)
      omit_external_ip: false
      state_timeout: 15m

- group: jupyter_notebook
  modules:
  - id: slurmrestapi_bucket
    source: modules/file-system/pre-existing-network-storage
    settings:
      remote_mount: gs://$(vars.af3ipynb_bucket)
      local_mount: $(vars.af3ipynb_bucket_local_mount)
      fs_type: gcsfuse
      mount_options: defaults,_netdev,implicit_dirs,allow_other,dir_mode=0777,file_mode=777

  - id: slurmrestapi_notebook
    source: community/modules/compute/notebook
    use: [slurmrestapi_bucket]
    settings:
      gcs_bucket_path: $(slurmrestapi_bucket.network_storage.remote_mount)
      machine_type: $(vars.notebook_machine_type)
      instance_image:
        project: deeplearning-platform-release
        family: tf-latest-cpu
